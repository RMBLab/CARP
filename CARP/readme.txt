****************************************************************************
* README file for CARP
* Author: Jamie Zhu <jimzhu@GitHub>
* Last updated: 2015/08/14   
****************************************************************************

This package implements CARP, an approach for context-aware reliability 
prediction of black-box services.  

****************************************************************************
Dependencies
****************************************************************************

- Python 2.7 (https://www.python.org)
- Cython 0.20.1 (http://cython.org)
- numpy 1.8.1 (http://www.scipy.org)
- scipy 0.13.3 (http://www.scipy.org)

The implementations are based on a combination of Python and C++ programming 
languages, in order to achieve both speed and simplicity. To do so, Cython is 
used. The core algorithms are implemented using C++, and we obtain a large 
speedup than pure Python implementation. You can refer to the README.md of 
WSRec repository for instructions of installing Cython. But you do not need 
it if you only want to reproduce the experimental results by executing the 
scripts that I have provided (You may even not need any execution because 
we have also provided most of the results). Cython is only required when you 
modify the c++ source files and want to re-compile them. 

It is worth noting that our implementation is also based on numpy and scipy 
packages, so you would also need to install these packages first.

****************************************************************************
Contents of this package
****************************************************************************

CARP/
  - run_rel.py                   - script file for running the experiments on 
                                   reliability QoS data 
  - setup.py                     - setup script file for build c++ modules
  - readme.txt                   - descriptions of this package 
  - src/                         - directory of the source files
      - dataloader.py            - a function to load the dataset (with 
                                   preprocessing)
      - utilities.py             - a script containing a bag of useful utilities
      - evaluator.py             - control execution and results collection of the 
                                   specific algorithm
      - core.so                  - the external module built from C++ 
                                   implementations
      - core/                    - directory of c++ implementation 
          - CARP.h               - header file
          - CARP.cpp             - source file
          - core.pyx             - a python wrapper written in Cython for C++ 
                                   functions 
          - core.cpp             - This file is automatically generated by Cython 
                                   for building core.so
  - result/                      - directory for storing evaluation results
                                   available metrics: (MAE, NMAE, RMSE, MRE, NPRE)
      - avg_relResult_0.02.txt   - E.g., the reliability prediction result under 
                                   matrix density = 2%
      - [...]                    - many other results

****************************************************************************
Usage of this package
****************************************************************************

For ease of reproducing and compare with other approaches, we provide the 
detailed experimental results with five metrics (MAE, NMAE, RMSE, MRE, NPRE), 
under the "result/" directory, after running the above reliability prediction 
approach on the dataset. E.g.,"result/avg_relResult_0.02.txt" records the 
evaluation results under matrix density = 2%. In particular, each experiment 
is run for 20 times and the average result (including std value) is reported. 
These results can be directly used for your research work.

On the other hand, if you want to reproduce our experiments, you can run the 
program with our provided Python scripts "run_rel.py". You can also turn on 
the "parallelMode" in the config area for speedup if you use a multi-core 
machine.

>> python run_rel.py

Make sure the external module "core.so" exists. If not, you can build it by 
the follow command. Note that whereas our code is executable to different 
platforms, we has only tested the current version on Linux.

>> python setup.py build_ext --inplace

****************************************************************************
Issues
****************************************************************************

In case of questions or problems, please do not hesitate to report to our 
issue page (https://github.com/wsdream/CARP/issues). We will help ASAP. 
In addition, we will appreciate any contribution to refine and optimize this 
package.

****************************************************************************
Copyright (c) WS-DREAM Team, CUHK
****************************************************************************

Permission is granted for anyone to copy, use, modify, or distribute this 
program and accompanying programs and documents for any purpose, provided 
this copyright notice is retained and prominently displayed, along with a 
note saying that the original programs are available from our web page 
(https://wsdream.github.io). The program is provided as-is, and there are 
no guarantees that it fits your purposes or that it is bug-free. All use 
of these programs is entirely at the user's own risk.

